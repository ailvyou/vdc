<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.vdc.dao.MenuInfoMapper">
	<resultMap id="BaseResultMap" type="com.vdc.model.MenuInfo">
		<id column="menu_id" property="menuId" jdbcType="BIGINT" />
		<result column="menu_name" property="menuName" jdbcType="VARCHAR" />
		<result column="parent_menu_id" property="parentMenuId" jdbcType="BIGINT" />
		<result column="menu_description" property="menuDescription" jdbcType="VARCHAR" />
		<result column="menu_uri" property="menuUri" jdbcType="VARCHAR" />
		<result column="menu_level" property="menuLevel" jdbcType="INTEGER" />
		<result column="is_enabled" property="isEnabled" jdbcType="INTEGER" />
		<result column="allow_role_id" property="allowRoleId" jdbcType="BIGINT" />
		<result column="limit_role_id" property="limitRoleId" jdbcType="BIGINT" />
	</resultMap>
	<resultMap id="TreeResultMap" type="com.vdc.dto.TreeObject">
		<id column="menu_id" property="id" jdbcType="BIGINT" />
		<result column="menu_name" property="text" jdbcType="VARCHAR" />
		<result column="parent_menu_id" property="pid" jdbcType="BIGINT" />
		<result column="state" property="state" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		menu_id, menu_name, parent_menu_id, menu_description, menu_uri, menu_level, is_enabled, allow_role_id,
		limit_role_id
	</sql>
	<select id="selectMenuForTree" resultMap="TreeResultMap" parameterType="java.util.Map">
		select
			mi.menu_id, mi.menu_name, mi.parent_menu_id,
			(select (case when count(1)>0 then 'closed' else '' end) from menu_info where parent_menu_id=mi.menu_id) as state
		from menu_info mi
		where mi.is_enabled=1
		<if test="parentMenuIdIsNull != null">
			and mi.parent_menu_id is null
		</if>
		<if test="parentMenuId != null">
			and mi.parent_menu_id = #{parentMenuId,jdbcType=BIGINT}
		</if>
		<if test="menuLevel != null">
			and mi.menu_level = #{menuLevel,jdbcType=BIGINT}
		</if>
		<if test="roleId != null">
			and exists (select 1 from role_menu_ref rmr where rmr.menu_id=mi.menu_id and rmr.role_id = #{roleId,jdbcType=BIGINT} and rmr.is_deleted=0)
		</if>
		<if test="excludeButton != null">
			and mi.menu_level != 3
		</if>
		order by mi.menu_id
	</select>
	<select id="countMenu" resultType="java.lang.Integer" parameterType="java.util.Map">
		select
		count(1)
		from menu_info mi
		where mi.is_enabled=1
		<if test="parentMenuIdIsNull != null">
			and mi.parent_menu_id is null
		</if>
		<if test="parentMenuId != null">
			and mi.parent_menu_id = #{parentMenuId,jdbcType=BIGINT}
		</if>
		<if test="menuLevel != null">
			and mi.menu_level = #{menuLevel,jdbcType=BIGINT}
		</if>
		<if test="roleId != null">
			and exists (select 1 from role_menu_ref rmr where rmr.menu_id=mi.menu_id and rmr.role_id = #{roleId,jdbcType=BIGINT} and rmr.is_deleted=0)
		</if>
		<if test="excludeButton != null">
			and mi.menu_level != 3
		</if>
	</select>
	<select id="selectMenu" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from menu_info mi
		where mi.is_enabled=1
		<if test="parentMenuIdIsNull != null">
			and mi.parent_menu_id is null
		</if>
		<if test="parentMenuId != null">
			and mi.parent_menu_id = #{parentMenuId,jdbcType=BIGINT}
		</if>
		<if test="menuLevel != null">
			and mi.menu_level = #{menuLevel,jdbcType=BIGINT}
		</if>
		<if test="roleId != null">
			and exists (select 1 from role_menu_ref rmr where rmr.menu_id=mi.menu_id and rmr.role_id = #{roleId,jdbcType=BIGINT} and rmr.is_deleted=0)
		</if>
		<if test="excludeButton != null">
			and mi.menu_level != 3
		</if>
		order by mi.menu_id
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from menu_info
		where menu_id = #{menuId,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from menu_info
		where menu_id = #{menuId,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.vdc.model.MenuInfo">
		insert into menu_info (menu_name, parent_menu_id,
		menu_description, menu_uri, menu_level, is_enabled,
		allow_role_id, limit_role_id)
		values (#{menuName,jdbcType=VARCHAR}, #{parentMenuId,jdbcType=BIGINT},
		#{menuDescription,jdbcType=VARCHAR}, #{menuUri,jdbcType=VARCHAR}, #{menuLevel,jdbcType=INTEGER}, #{isEnabled,jdbcType=INTEGER},
		#{allowRoleId,jdbcType=BIGINT}, #{limitRoleId,jdbcType=BIGINT})
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.vdc.model.MenuInfo">
		update menu_info
		<set>
			<if test="menuName != null">
				menu_name = #{menuName,jdbcType=VARCHAR},
			</if>
			<if test="parentMenuId != null">
				parent_menu_id = #{parentMenuId,jdbcType=BIGINT},
			</if>
			<if test="menuDescription != null">
				menu_description = #{menuDescription,jdbcType=VARCHAR},
			</if>
			<if test="menuUri != null">
				menu_uri = #{menuUri,jdbcType=VARCHAR},
			</if>
			<if test="menuLevel != null">
				menu_level = #{menuLevel,jdbcType=INTEGER},
			</if>
			<if test="isEnabled != null">
				is_enabled = #{isEnabled,jdbcType=INTEGER},
			</if>
			<if test="allowRoleId != null">
				allow_role_id = #{allowRoleId,jdbcType=BIGINT},
			</if>
			<if test="limitRoleId != null">
				limit_role_id = #{limitRoleId,jdbcType=BIGINT},
			</if>
		</set>
		where menu_id = #{menuId,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.vdc.model.MenuInfo">
		update menu_info
		set menu_name = #{menuName,jdbcType=VARCHAR},
		parent_menu_id = #{parentMenuId,jdbcType=BIGINT},
		menu_description = #{menuDescription,jdbcType=VARCHAR},
		menu_uri = #{menuUri,jdbcType=VARCHAR},
		menu_level = #{menuLevel,jdbcType=INTEGER},
		is_enabled = #{isEnabled,jdbcType=INTEGER},
		allow_role_id = #{allowRoleId,jdbcType=BIGINT},
		limit_role_id = #{limitRoleId,jdbcType=BIGINT}
		where menu_id = #{menuId,jdbcType=BIGINT}
	</update>
</mapper>