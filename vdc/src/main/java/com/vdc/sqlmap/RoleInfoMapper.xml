<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.vdc.dao.RoleInfoMapper">
	<resultMap id="BaseResultMap" type="com.vdc.model.RoleInfo">
		<id column="role_id" property="roleId" jdbcType="BIGINT" />
		<result column="role_name" property="roleName" jdbcType="VARCHAR" />
		<result column="parent_role_id" property="parentRoleId" jdbcType="BIGINT" />
		<result column="customer_id" property="customerId" jdbcType="BIGINT" />
		<result column="is_enabled" property="isEnabled" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="create_by" property="createBy" jdbcType="BIGINT" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="update_by" property="updateBy" jdbcType="BIGINT" />
	</resultMap>
	<sql id="Base_Column_List">
		role_id, role_name, parent_role_id, customer_id, is_enabled, create_time, create_by,
		update_time, update_by
	</sql>
	<select id="countRole" resultType="java.lang.Integer" parameterType="java.util.Map">
		select
		count(1)
		from role_info
		where 1=1
		<if test="roleName != null">
			and role_name like CONCAT('%',#{roleName,jdbcType=VARCHAR},'%')
		</if>
		<if test="parentRoleId != null">
			and parent_role_id = #{parentRoleId,jdbcType=BIGINT}
		</if>
		<if test="customerIdIsNull != null">
			and customer_id is null
		</if>
		<if test="customerId != null">
			and customer_id = #{customerId,jdbcType=BIGINT}
		</if>
	</select>
	<select id="selectRole" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from role_info
		where 1=1
		<if test="roleName != null">
			and role_name like CONCAT('%',#{roleName,jdbcType=VARCHAR},'%')
		</if>
		<if test="parentRoleId != null">
			and parent_role_id = #{parentRoleId,jdbcType=BIGINT}
		</if>
		<if test="customerIdIsNull != null">
			and customer_id is null
		</if>
		<if test="customerId != null">
			and customer_id = #{customerId,jdbcType=BIGINT}
		</if>
		order by role_id limit #{startIndex},#{pageSize}
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from role_info
		where role_id = #{roleId,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from role_info
		where role_id = #{roleId,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.vdc.model.RoleInfo">
		insert into role_info (role_name, parent_role_id,
		customer_id, is_enabled, create_time,
		create_by, update_time, update_by
		)
		values (#{roleName,jdbcType=VARCHAR}, #{parentRoleId,jdbcType=BIGINT},
		#{customerId,jdbcType=BIGINT}, #{isEnabled,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
		#{createBy,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=BIGINT}
		)
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.vdc.model.RoleInfo">
		update role_info
		<set>
			<if test="roleName != null">
				role_name = #{roleName,jdbcType=VARCHAR},
			</if>
			<if test="parentRoleId != null">
				parent_role_id = #{parentRoleId,jdbcType=BIGINT},
			</if>
			<if test="customerId != null">
				customer_id = #{customerId,jdbcType=BIGINT},
			</if>
			<if test="isEnabled != null">
				is_enabled = #{isEnabled,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createBy != null">
				create_by = #{createBy,jdbcType=BIGINT},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateBy != null">
				update_by = #{updateBy,jdbcType=BIGINT},
			</if>
		</set>
		where role_id = #{roleId,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.vdc.model.RoleInfo">
		update role_info
		set role_name = #{roleName,jdbcType=VARCHAR},
		parent_role_id = #{parentRoleId,jdbcType=BIGINT},
		customer_id = #{customerId,jdbcType=BIGINT},
		is_enabled = #{isEnabled,jdbcType=INTEGER},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		create_by = #{createBy,jdbcType=BIGINT},
		update_time = #{updateTime,jdbcType=TIMESTAMP},
		update_by = #{updateBy,jdbcType=BIGINT}
		where role_id = #{roleId,jdbcType=BIGINT}
	</update>
</mapper>